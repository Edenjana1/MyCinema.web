// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyCinema.Data;

#nullable disable

namespace MyCinema.Migrations
{
    [DbContext(typeof(MyCinemaContext))]
    [Migration("20241204100315_AfterPurchase1")]
    partial class AfterPurchase1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyCinema.Models.Costumer", b =>
                {
                    b.Property<int>("IdentityCard")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdentityCard"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstMidName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdentityCard");

                    b.ToTable("Costumers");
                });

            modelBuilder.Entity("MyCinema.Models.Movie", b =>
                {
                    b.Property<string>("MovieID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AgeRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MovieDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MovieGenre")
                        .HasColumnType("int");

                    b.Property<string>("MovieName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MoviePrice")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MovieID");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("MyCinema.Models.Purchase", b =>
                {
                    b.Property<int>("PurchaseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseID"));

                    b.Property<int>("CostumerID")
                        .HasColumnType("int");

                    b.Property<int>("MovieID")
                        .HasColumnType("int");

                    b.Property<string>("MoviesMovieID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SerieID")
                        .HasColumnType("int");

                    b.HasKey("PurchaseID");

                    b.HasIndex("CostumerID");

                    b.HasIndex("MoviesMovieID");

                    b.HasIndex("SerieID");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("MyCinema.Models.Serie", b =>
                {
                    b.Property<int>("SerieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SerieID"));

                    b.Property<string>("AgeRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SeasonNum")
                        .HasColumnType("int");

                    b.Property<string>("SerieDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SerieGenre")
                        .HasColumnType("int");

                    b.Property<string>("SerieName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SeriePrice")
                        .HasColumnType("int");

                    b.HasKey("SerieID");

                    b.ToTable("Series");
                });

            modelBuilder.Entity("MyCinema.Models.Purchase", b =>
                {
                    b.HasOne("MyCinema.Models.Costumer", "Costumers")
                        .WithMany("Purchases")
                        .HasForeignKey("CostumerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyCinema.Models.Movie", "Movies")
                        .WithMany("Purchases")
                        .HasForeignKey("MoviesMovieID");

                    b.HasOne("MyCinema.Models.Serie", "Series")
                        .WithMany("Purchases")
                        .HasForeignKey("SerieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Costumers");

                    b.Navigation("Movies");

                    b.Navigation("Series");
                });

            modelBuilder.Entity("MyCinema.Models.Costumer", b =>
                {
                    b.Navigation("Purchases");
                });

            modelBuilder.Entity("MyCinema.Models.Movie", b =>
                {
                    b.Navigation("Purchases");
                });

            modelBuilder.Entity("MyCinema.Models.Serie", b =>
                {
                    b.Navigation("Purchases");
                });
#pragma warning restore 612, 618
        }
    }
}
